#!/usr/bin/env bash

################################################################################
# System specific functions
################################################################################
case "$(uname)" in
  "Linux")
    ############################################################################
    # Open the current directory, otherwise open the given location
    ############################################################################
    function open() {
      if [ $# -eq 0 ]; then
        xdg-open . >/dev/null 2>&1
      else
        xdg-open "$@" >/dev/null 2>&1
      fi
    }

    ;;
  "Darwin")

    ;;
esac

################################################################################
# Update and upgrade everything
################################################################################
function f5() {
  # Dotfiles
  git -C "$HOME/.dotfiles" pull-sub
  git -C "$HOME/.dotfiles" submodule update --recursive --remote
  git -C "$HOME/.dotfiles" fetch --prune
  git -C "$HOME/.dotfiles" gc --aggressive --prune=now

  # Vim
  vim +PlugUpgrade +PlugUpdate +CocUpdateSync +PlugClean! +qall
  for dir in "$HOME"/.vim/plugged/*/; do
    if [ -d "$dir/.git" ]; then
      git -C "$dir" fetch --prune
      git -C "$dir" gc --aggressive --prune=now
    fi
  done

  # Oh-my-zsh
  git -C "$HOME/.oh-my-zsh" checkout "$(git -C "$HOME/.oh-my-zsh" symbolic-ref --short HEAD 2>/dev/null || echo "master")"
  git -C "$HOME/.oh-my-zsh" stash clear
  git -C "$HOME/.oh-my-zsh" stash
  git -C "$HOME/.oh-my-zsh" pull
  git -C "$HOME/.oh-my-zsh" stash apply
  git -C "$HOME/.oh-my-zsh" fetch --prune
  git -C "$HOME/.oh-my-zsh" gc --aggressive --prune=now

  # Oh-my-zsh themes
  for dir in "$HOME/.oh-my-zsh/custom/themes/"*/; do
    git -C "$dir" checkout "$(git -C "$dir" symbolic-ref --short HEAD 2>/dev/null || echo "master")"
    git -C "$dir" stash clear
    git -C "$dir" stash
    git -C "$dir" pull
    git -C "$dir" stash apply
    git -C "$dir" fetch --prune
    git -C "$dir" gc --aggressive --prune=now
  done

  # Oh-my-zsh plugins
  for dir in "$HOME/.oh-my-zsh/custom/plugins/"*/; do
    git -C "$dir" checkout "$(git -C "$dir" symbolic-ref --short HEAD 2>/dev/null || echo "master")"
    git -C "$dir" stash clear
    git -C "$dir" stash
    git -C "$dir" pull
    git -C "$dir" stash apply
    git -C "$dir" fetch --prune
    git -C "$dir" gc --aggressive --prune=now
  done

  # Tmux plugins
  for dir in "$HOME/.tmux/plugins/"*/; do
    if [[ "$(basename "$dir")" == "tpm" ]]; then
      continue
    fi

    git -C "$dir" checkout "$(git -C "$dir" symbolic-ref --short HEAD 2>/dev/null || echo "master")"
    git -C "$dir" stash clear
    git -C "$dir" stash
    git -C "$dir" pull
    git -C "$dir" stash apply
    git -C "$dir" fetch --prune
    git -C "$dir" gc --aggressive --prune=now
  done

  case "$(uname)" in
    "Linux")
      sudo apt update -y
      sudo apt dist-upgrade -y
      sudo apt autoremove -y
      sudo apt clean all -y

      ;;
    "Darwin")
      brew update
      brew bundle --file "$HOME/.dotfiles/Brewfile" --force cleanup
      brew bundle --file "$HOME/.dotfiles/Brewfile"
      brew upgrade
      brew cu --all --yes --cleanup
      brew cleanup -s

      mas upgrade
      sudo softwareupdate -i -a

      ruby-install --update

      sudo find 2> /dev/null /private/var/folders/ -type d -name com.apple.dock.launchpad -exec rm -rf {} +
      killall Dock

      ;;
  esac

  # Reload zsh settings
  # shellcheck disable=SC1091
  source "$HOME/.zshrc"
}
